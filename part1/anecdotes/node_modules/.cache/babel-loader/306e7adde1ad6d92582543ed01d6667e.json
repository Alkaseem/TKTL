{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alkaseem/Documents/Web_Apps/fullstackopen-019/part1/unicafe/src/statistics.js\";\nimport React from \"react\";\n\nfunction statistics(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Good: \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Neutral: \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Bad: \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n      children: [\"All: \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Average: \", (good + neutral + bad) / 3]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Positve: \", (good + neutral + bad) / 3 * 100, \"%\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n\nexport default statistics;","map":{"version":3,"sources":["/Users/alkaseem/Documents/Web_Apps/fullstackopen-019/part1/unicafe/src/statistics.js"],"names":["React","statistics","props","good","neutral","bad"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,2BAAUC,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BAAaC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,0BAASC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,0BAAcF,IAAI,GAAGC,OAAP,GAAiBC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,8BAAa,CAACF,IAAI,GAAGC,OAAP,GAAiBC,GAAlB,IAAyB,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AAAA,8BAAc,CAACF,IAAI,GAAGC,OAAP,GAAiBC,GAAlB,IAAyB,CAA1B,GAA+B,GAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;AAED,eAAeJ,UAAf","sourcesContent":["import React from \"react\";\n\nfunction statistics(props) {\n  return (\n    <div>\n      <h2>Statistics</h2>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <strong>All: {good + neutral + bad}</strong>\n      <p>Average: {(good + neutral + bad) / 3}</p>\n      {/* <p>Positve: {(good + neutral) / bad}</p> */}\n      <p>Positve: {((good + neutral + bad) / 3) * 100}%</p>\n    </div>\n  );\n}\n\nexport default statistics;\n"]},"metadata":{},"sourceType":"module"}